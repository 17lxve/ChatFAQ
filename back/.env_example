DEBUG=yes/no

SECRET_KEY=secretkey1234567890
BASE_URL=http://localhost:8000
ENVIRONMENT="dev"

# Database (shared with Docker)
POSTGRES_USER=chatfaq
POSTGRES_PASSWORD=super
POSTGRES_DB=chatfaq
CONN_MAX_AGE=0

# Note: like this, DB_HOST is probably unknown to your computer
#  add new line in /etc/hosts: 127.0.0.1    postgres
#  to share the same .env whether you run in the host (dev mode) or in a container
DATABASE_URL="postgresql://chatfaq:chatfaq@postgres:5432/chatfaq" # "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}?sslmode=${DB_SSL_MODE}"
# or
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_SSL_MODE=disable

# Local Storage
STORAGES_MODE=s3/do/local

# S3 Storage
AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY_ID>
AWS_SECRET_ACCESS_KEY=<AWS_SECRET_ACCESS_KEY>
AWS_STORAGE_BUCKET_NAME=chatfaq-backend
DO_REGION=chatfaq-backend.ams3
STORAGES_MODE=do
STORAGE_MAKE_FILES_PUBLIC=no
AWS_S3_SIGNATURE_VERSION=s3v4

SCRAPY_SETTINGS_MODULE=back.apps.language_model.scraping.scraping.settings

REDIS_URL=redis://redis:6378/0

# # Optionals
# TG_TOKEN=<TELEGRAM_TOKEN>
# OPENAI_API_KEY=<OPENAI_API_KEY>
# HUGGINGFACE_KEY=<HUGGINGFACE_KEY>
# VLLM_ENDPOINT_URL=http://localhost:5000/v1
# ANTHROPIC_API_KEY=<ANTHROPIC_API_KEY>
# MISTRAL_API_KEY=<MISTRAL_API_KEY>

# --------------------------- RAY --------------------------- # TODO Move to its own project directory

BACKEND_HOST=http://localhost:8000 # If Django is another docker service BACKEND_URL=http://django_app:8000/back
BACKEND_TOKEN=<BACKEND_TOKEN>
