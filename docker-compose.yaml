---
version: "3.8"
services:

  postgres:
    image: ankane/pgvector:v0.5.0 #postgres:15-alpine
    container_name: postgres
    hostname: postgres
    volumes:
      - chatfaq_db_data:/var/lib/postgresql/data/
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata/
      - POSTGRES_USER=chatfaq
      - POSTGRES_PASSWORD=chatfaq
      - POSTGRES_DB=chatfaq
    networks:
      - chatfaq_db_net
  redis:
    image: redis:6.2-alpine
    hostname: redis
    # ports:
    #   - '6379:6379'
    networks:
      - chatfaq_db_net
    # command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    # volumes:
    #   - cache:/data
  back:
    build:
      context: back
      dockerfile: Dockerfile
    image: chatfaq_back
    container_name: chatfaq_back
    hostname: back
    depends_on:
      - postgres
      - redis
      - ray
    ports:
      - 8000:8000
    networks:
      - default
      - chatfaq_db_net
      - chatfaq_back_net
      - chatfaq_state_machine_net

  celery:
    build:
      context: back
      dockerfile: Dockerfile
    image: chatfaq_celery
    container_name: chatfaq_celery
    hostname: celery
    depends_on:
      - back
    networks:
      - chatfaq_back_net
      - chatfaq_db_net
    command:
        - modelw-docker
        - run
        - python
        - -m
        - celery
        - -A
        - back.config
        - worker
        - -l
        - INFO
        - --pool
        - threads

  ray:
    image: chatfaq/chatfaq-cpu:2024.04
    container_name: chatfaq_ray
    command: ["ray", "start", "--head", "--resources={\"tasks\": 100, \"rags\": 100}", "--block"]
    ports:
      - 8265:8265
      - 8265:8265
      - 10001:10001
      - 10002:8001
    networks:
      - default
      - chatfaq_back_net

  state-machine:
    build:
      context: sdk
      dockerfile: Dockerfile
    image: chatfaq_fsm
    container_name: chatfaq_fsm
    hostname: fsm
    depends_on:
      - back
    networks:
      - chatfaq_state_machine_net
      - chatfaq_back_net

  widget:
    build:
      context: widget
      dockerfile: Dockerfile
    image: chatfaq_widget
    container_name: chatfaq_widget
    depends_on:
      - back
    ports:
      - 3003:3000
    networks:
      - default
      - chatfaq_back_net
  admin:
    build:
      context: admin
      dockerfile: Dockerfile
    image: chatfaq_admin
    container_name: chatfaq_admin
    depends_on:
      - back
    ports:
      - 3000:3000
    networks:
      - default
      - chatfaq_back_net

volumes:
  chatfaq_db_data:

networks:
  chatfaq_db_net:  # postgres, back
  chatfaq_back_net:  # back, widget
  chatfaq_state_machine_net:  # back, state-machine

