from chatfaq_sdk.api.retrieval import ChatfaqRetrievalAPI


class Layer:
    """
    Representation of all the future stack's layers. Implementing a new layer should inherit form this
    """

    _type = None

    def dict_repr(self, ctx) -> dict:
        """
        Used to represent the layer as a dictionary which will be sent through the WS to the ChatFAQ's back-end server
        It is cached since there are layers as such as the LMGeneratedText which are computationally expensive
        :return:
            dict
                A json compatible dict
        """
        raise NotImplementedError


class Text(Layer):
    """
    Simplest layer representing raw text
    """

    _type = "text"

    def __init__(self, payload):
        self.payload = payload

    def dict_repr(self, ctx):
        return [{"type": self._type, "payload": self.payload}]


class LMGeneratedText(Layer):
    """
    Layer representing text generated by a language model
    """

    _type = "lm_generated_text"
    loaded_model = {}

    def __init__(self, input_text, model_id):
        self.input_text = input_text
        self.model_id = model_id

    def dict_repr(self, ctx):
        model_response = ChatfaqRetrievalAPI(ctx.chatfaq_retrieval_http, ctx.token).query(self.model_id, self.input_text)

        return [{
            "type": self._type,
            "payload": {
                "model_response": model_response["res"],
                "references": [c["url"] for c in model_response["context"]],
                "model": self.model_id
            }
        }]

